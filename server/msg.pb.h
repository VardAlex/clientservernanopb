/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_MSG_PB_H_INCLUDED
#define PB_MSG_PB_H_INCLUDED
#include "pb.h"
#include "sys/types.h"
#include "dirent.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _SimpleMessage { 
    int32_t number; 
    char message[128]; 
} SimpleMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define SimpleMessage_init_default               {0, ""}
#define SimpleMessage_init_zero                  {0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define SimpleMessage_number_tag                 1
#define SimpleMessage_message_tag                2

/* Struct field encoding specification for nanopb */
#define SimpleMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    number,            1) \
X(a, STATIC,   REQUIRED, STRING,   message,           2)
#define SimpleMessage_CALLBACK NULL
#define SimpleMessage_DEFAULT NULL

extern const pb_msgdesc_t SimpleMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define SimpleMessage_fields &SimpleMessage_msg

/* Maximum encoded size of messages (where known) */
#define SimpleMessage_size                       141

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
